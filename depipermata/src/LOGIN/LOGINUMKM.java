package LOGIN;
import HALUT.HALAMANUTAMA;
import KONEKSI.konek;
import static KONEKSI.konek.conn;
import STOK.STOK;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author devipermata
 */

public class LOGINUMKM extends javax.swing.JFrame {
    
    

  
    public LOGINUMKM() {
        initComponents();
        conn = konek.getConnection();
        hide.setVisible(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        show = new javax.swing.JLabel();
        hide = new javax.swing.JLabel();
        jtxtusername = new javax.swing.JTextField();
        jtxtpassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        btnlogin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/Eye.png"))); // NOI18N
        show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showMouseClicked(evt);
            }
        });
        getContentPane().add(show, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 490, -1, 30));

        hide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/Invisible.png"))); // NOI18N
        hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideMouseClicked(evt);
            }
        });
        getContentPane().add(hide, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 480, 50, 50));

        jtxtusername.setBackground(new java.awt.Color(157, 202, 244));
        jtxtusername.setActionCommand("null");
        jtxtusername.setBorder(null);
        jtxtusername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtusernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtusernameFocusLost(evt);
            }
        });
        jtxtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtusernameActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 220, 30));

        jtxtpassword.setBackground(new java.awt.Color(157, 202, 244));
        jtxtpassword.setBorder(null);
        jtxtpassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxtpasswordMouseClicked(evt);
            }
        });
        jtxtpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtpasswordActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 490, 220, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/login.JPG"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btnlogin.setBackground(new java.awt.Color(0, 102, 255));
        btnlogin.setText("Log in");
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });
        getContentPane().add(btnlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 540, 160, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/supplier.JPG"))); // NOI18N
        jLabel2.setText("PP");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 100, 100, 90));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 600, 120, -1));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 450, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        
        
    }//GEN-LAST:event_formMouseDragged

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed
    String enteredUsername = jtxtusername.getText().trim();
    String enteredPassword = new String(jtxtpassword.getPassword()).trim();

    if (enteredUsername.isEmpty() || enteredPassword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Username dan password tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String sql = "SELECT akun.password, Penjual.id_penjual FROM akun "
               + "JOIN Penjual ON akun.id_penjual = Penjual.id_penjual "
               + "WHERE akun.username = ?";

    try (PreparedStatement stmt = conn.prepareStatement(sql)) {
        stmt.setString(1, enteredUsername);

        try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                String storedPassword = rs.getString("password");
                String userId = rs.getString("id_penjual");

                if (enteredPassword.equals(storedPassword)) {
                    JOptionPane.showMessageDialog(this, "Login berhasil sebagai Penjual ID: " + userId, "Sukses", JOptionPane.INFORMATION_MESSAGE);

                    HALAMANUTAMA halut = new HALAMANUTAMA();
                    halut.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Password salah!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Username tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan pada koneksi atau query: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }


    }//GEN-LAST:event_btnloginActionPerformed

    private void jtxtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtusernameActionPerformed

    }//GEN-LAST:event_jtxtusernameActionPerformed

    private void jtxtusernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtusernameFocusGained
        // TODO add your handling code here:
        String username=jtxtusername.getText();
        if(username.equals("username")){
            jtxtusername.setText("");
        }
    }//GEN-LAST:event_jtxtusernameFocusGained

    private void jtxtusernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtusernameFocusLost
        // TODO add your handling code here:
         String username=jtxtusername.getText();
        if(username.equals("username")){
            jtxtusername.setText("");
        }
    }//GEN-LAST:event_jtxtusernameFocusLost

    private void jtxtpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtpasswordActionPerformed
        
    }//GEN-LAST:event_jtxtpasswordActionPerformed

    private void jtxtpasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxtpasswordMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtpasswordMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // Minta pengguna untuk memasukkan username
    String username = JOptionPane.showInputDialog(this, "Masukkan Username Anda:");

    if (username != null && !username.trim().isEmpty()) {
        // Panggil method untuk menangani reset password
        resetPassword(username);
    } else {
        JOptionPane.showMessageDialog(this, "Username tidak boleh kosong!");
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showMouseClicked
        show.setVisible(false);
        hide.setVisible(true);
        jtxtpassword.setEchoChar((char)0);
    }//GEN-LAST:event_showMouseClicked

    private void hideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideMouseClicked
       show.setVisible(true);
        hide.setVisible(false);
        jtxtpassword.setEchoChar('*');
    }//GEN-LAST:event_hideMouseClicked
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGINUMKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGINUMKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGINUMKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGINUMKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LOGINUMKM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnlogin;
    private javax.swing.JLabel hide;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jtxtpassword;
    private javax.swing.JTextField jtxtusername;
    private javax.swing.JLabel show;
    // End of variables declaration//GEN-END:variables

    private void resetPassword(String username) {
String sql = "SELECT * FROM akun WHERE username = ?"; 

try (PreparedStatement stmt = conn.prepareStatement(sql)) {
    stmt.setString(1, username);

    try (ResultSet rs = stmt.executeQuery()) {
        if (rs.next()) {
            String newPassword = JOptionPane.showInputDialog(this, "Masukkan Password Baru:");

            if (newPassword != null && !newPassword.trim().isEmpty()) {
                if (newPassword.length() < 6) {
                    JOptionPane.showMessageDialog(this, "Password harus terdiri dari minimal 6 karakter.");
                    return;
                }

                String confirmPassword = JOptionPane.showInputDialog(this, "Konfirmasi Password Baru:");
                if (confirmPassword != null && confirmPassword.equals(newPassword)) {
                    String updateSql = "UPDATE akun SET password = ? WHERE username = ?";
                    try (PreparedStatement updateStmt = conn.prepareStatement(updateSql)) {
                        updateStmt.setString(1, newPassword);  // Password baru
                        updateStmt.setString(2, username);  // Username yang akan diupdate

                        int rowsUpdated = updateStmt.executeUpdate();
                        if (rowsUpdated > 0) {
                            JOptionPane.showMessageDialog(this, "Password berhasil diubah!");
                        } else {
                            JOptionPane.showMessageDialog(this, "Gagal mengubah password.");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Password baru dan konfirmasi password tidak cocok.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Password tidak boleh kosong!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Username tidak ditemukan.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan dalam koneksi atau eksekusi query.");
    }
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan pada koneksi.");
}
    }}